"""unit tests for PreMODIT cross section

Note:
    This tests compares the results by PreMODIT with thoses by MODIT.
    If you are interested more manual comparison, see integrations/premodit/line_strength_comparison_*****.py
    ***** = exomol or hitemp, which compares cross section and line strength, starting from molecular databases.

"""

import pytest
from importlib.resources import files
import pandas as pd
import numpy as np
from exojax.opacity.opacalc import OpaPremodit
from exojax.test.emulate_mdb import mock_mdb
from exojax.test.emulate_mdb import mock_wavenumber_grid

# The following data can be regenerated by tests/generate_xs.py
from exojax.test.data import TESTDATA_CO_EXOMOL_MODIT_XS_REF
from exojax.test.data import TESTDATA_CO_HITEMP_MODIT_XS_REF_AIR

from jax import config

config.update("jax_enable_x64", True)

testdata = {}
testdata["exomol"] = TESTDATA_CO_EXOMOL_MODIT_XS_REF
testdata["hitemp"] = TESTDATA_CO_HITEMP_MODIT_XS_REF_AIR


@pytest.mark.parametrize(
    "db, diffmode",
    [
        ("exomol", 0),
        ("exomol", 1),
        ("exomol", 2),
        ("hitemp", 0),
        ("hitemp", 1),
        ("hitemp", 2),
    ],
)
def test_xsection_premodit(db, diffmode):

    ### DO NOT CHANGE ###
    Ttest = 1200  # fix to compare w/ precomputed xs by MODIT.
    #####################
    Ptest = 1.0
    mdb = mock_mdb(db)
    nu_grid, wav, res = mock_wavenumber_grid()
    opa = OpaPremodit(
        mdb=mdb, nu_grid=nu_grid, diffmode=diffmode, auto_trange=[500.0, 1500.0]
    )
    xsv = opa.xsvector(Ttest, Ptest)
    filename = files("exojax").joinpath("data/testdata/" + testdata[db])
    dat = pd.read_csv(filename, delimiter=",", names=("nus", "xsv"))
    res = np.max(np.abs(1.0 - xsv / dat["xsv"].values))
    assert res < 0.012


@pytest.mark.parametrize("db, diffmode", [("exomol", 0), ("hitemp", 2)])
def test_xsection_premodit_for_single_broadening(db, diffmode):

    ### DO NOT CHANGE ###
    Ttest = 1200  # fix to compare w/ precomputed xs by MODIT.
    #####################
    Ptest = 1.0
    mdb = mock_mdb(db)
    nu_grid, wav, res = mock_wavenumber_grid()
    opa = OpaPremodit(
        mdb=mdb,
        nu_grid=nu_grid,
        diffmode=diffmode,
        auto_trange=[500.0, 1500.0],
        broadening_resolution={"mode": "single", "value": None},
    )
    xsv = opa.xsvector(Ttest, Ptest)
    filename = files("exojax").joinpath("data/testdata/" + testdata[db])
    dat = pd.read_csv(filename, delimiter=",", names=("nus", "xsv"))
    res = np.max(np.abs(1.0 - xsv / dat["xsv"].values))
    assert (
        res < 0.06
    )  # < 6% (HITEMP) / 4% (ExoMOL) diff from exact broadening parameters using MODIT
