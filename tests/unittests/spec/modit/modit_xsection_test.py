"""short integration tests for MODIT cross section"""

import pytest
from importlib.resources import files
import pandas as pd
import numpy as np
from exojax.opacity import OpaModit
from exojax.test.emulate_mdb import mock_mdb
from exojax.test.emulate_mdb import mock_wavenumber_grid

# The following data can be regenerated by tests/generate_xs.py
from exojax.test.data import TESTDATA_CO_EXOMOL_MODIT_XS_REF
from exojax.test.data import TESTDATA_CO_HITEMP_MODIT_XS_REF_AIR

from jax import config

config.update("jax_enable_x64", True)

testdata = {}
testdata["exomol"] = TESTDATA_CO_EXOMOL_MODIT_XS_REF
testdata["hitemp"] = TESTDATA_CO_HITEMP_MODIT_XS_REF_AIR


@pytest.mark.parametrize("db", ["exomol", "hitemp"])
def test_xsection_modit(db):

    ### DO NOT CHANGE ###
    Ttest = 1200  # fix to compare w/ precomputed xs by MODIT.
    #####################
    Ptest = 1.0
    mdb = mock_mdb(db)
    nu_grid, wav, res = mock_wavenumber_grid()
    opa = OpaModit(mdb=mdb, nu_grid=nu_grid, dit_grid_resolution=0.1)
    xsv = opa.xsvector(Ttest, Ptest)
    filename = files("exojax").joinpath("data/testdata/" + testdata[db])
    dat = pd.read_csv(filename, delimiter=",", names=("nus", "xsv"))
    res = np.max(np.abs(1.0 - xsv / dat["xsv"].values))
    assert res < 1.0e-4
